// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using GamesWebApi.Models;

namespace GamesWebApi.Data
{
    public partial class Db_GamesContext : DbContext
    {
        public Db_GamesContext()
        {
        }

        public Db_GamesContext(DbContextOptions<Db_GamesContext> options)
            : base(options)
        {
        }

        public virtual DbSet<GameDetails> GameDetails { get; set; }
        public virtual DbSet<TbGames> TbGames { get; set; }
        public virtual DbSet<TbGenre> TbGenre { get; set; }
        public virtual DbSet<TbPlatform> TbPlatform { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<GameDetails>(entity =>
            {
                
                entity.HasKey(e => e.Id);

                entity.ToView("GameDetails");

                entity.Property(e => e.Deskripsi)
                    .HasColumnType("text")
                    .HasColumnName("deskripsi");

                entity.Property(e => e.Genre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("genre");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Idgenre).HasColumnName("idgenre");

                entity.Property(e => e.Idplatform).HasColumnName("idplatform");

                entity.Property(e => e.Nama)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nama");

                entity.Property(e => e.Pembuat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pembuat");

                entity.Property(e => e.Platform)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("platform");

                entity.Property(e => e.Rilistahun)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rilistahun");

                entity.Property(e => e.Tglinput)
                    .HasColumnType("date")
                    .HasColumnName("tglinput");
            });

            modelBuilder.Entity<TbGames>(entity =>
            {
                entity.ToTable("tb_games");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Deskripsi)
                    .HasColumnType("text")
                    .HasColumnName("deskripsi");

                entity.Property(e => e.Idgenre).HasColumnName("idgenre");

                entity.Property(e => e.Idplatform).HasColumnName("idplatform");

                entity.Property(e => e.Nama)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nama");

                entity.Property(e => e.Pembuat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pembuat");

                entity.Property(e => e.Rilistahun)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rilistahun");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Tglinput)
                    .HasColumnType("date")
                    .HasColumnName("tglinput");

                entity.HasOne(d => d.IdgenreNavigation)
                    .WithMany(p => p.TbGames)
                    .HasForeignKey(d => d.Idgenre)
                    .HasConstraintName("FK_tb_games_tb_genre");

                entity.HasOne(d => d.IdplatformNavigation)
                    .WithMany(p => p.TbGames)
                    .HasForeignKey(d => d.Idplatform)
                    .HasConstraintName("FK_tb_games_tb_platform");
            });

            modelBuilder.Entity<TbGenre>(entity =>
            {
                entity.HasKey(e => e.Idgenre);

                entity.ToTable("tb_genre");

                entity.Property(e => e.Idgenre).HasColumnName("idgenre");

                entity.Property(e => e.Deskripsi)
                    .HasColumnType("text")
                    .HasColumnName("deskripsi");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Status).HasColumnName("status");
            });

            modelBuilder.Entity<TbPlatform>(entity =>
            {
                entity.HasKey(e => e.Idplatform);

                entity.ToTable("tb_platform");

                entity.Property(e => e.Idplatform).HasColumnName("idplatform");

                entity.Property(e => e.Deskripsi)
                    .HasColumnType("text")
                    .HasColumnName("deskripsi");

                entity.Property(e => e.Platform)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("platform");

                entity.Property(e => e.Status).HasColumnName("status");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}